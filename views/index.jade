// import header
extends layout

// body start
block content
    body.skin-5
    .container
        // Top Navigation
        .content
            header.codrops-header
                h1
                    | Solution Remote Management
            #grid.grid.clearfix
                .grid__item
                    | 코바코
                .grid__item
                    | 코바코
                .grid__item
                    | 코바코
                .grid__item
                    | 코바코
                .grid__item
                    | 코바코
                .grid__item
                    | 코바코
                .grid__item
                    | 코바코
                .grid__item
                    | 코바코
        // /content
    // /container
    #drop-area.drop-area
        div
            .drop-area__item
                .dummy
                    | 7006
            .drop-area__item
                .dummy
                    | 7007
            .drop-area__item
                .dummy
                    | 7008
            .drop-area__item
                .dummy
                    | 7009
    .drop-overlay
    script(src='javascripts/draggabilly.pkgd.min.js')
    script(src='javascripts/dragdrop.js')
    script.
        (function() {
            var body = document.body,
                    dropArea = document.getElementById( 'drop-area' ),
                    droppableArr = [], dropAreaTimeout;
            // initialize droppables
            [].slice.call( document.querySelectorAll( '#drop-area .drop-area__item' )).forEach( function( el ) {
                droppableArr.push( new Droppable( el, {
                    onDrop : function( instance, draggableEl ) {
                        // show checkmark inside the droppabe element
                        classie.add( instance.el, 'drop-feedback' );
                        clearTimeout( instance.checkmarkTimeout );
                        instance.checkmarkTimeout = setTimeout( function() {
                            classie.remove( instance.el, 'drop-feedback' );
                        }, 400 );
                    }
                } ) );
            } );
            // initialize draggable(s)
            [].slice.call(document.querySelectorAll( '#grid .grid__item' )).forEach( function( el ) {
                new Draggable( el, droppableArr, {
                    draggabilly : { containment: document.body },
                    onStart : function() {
                        // add class 'drag-active' to body
                        classie.add( body, 'drag-active' );
                        // clear timeout: dropAreaTimeout (toggle drop area)
                        clearTimeout( dropAreaTimeout );
                        // show dropArea
                        classie.add( dropArea, 'show' );
                    },
                    onEnd : function( wasDropped ) {
                        var afterDropFn = function() {
                            // hide dropArea
                            classie.remove( dropArea, 'show' );
                            // remove class 'drag-active' from body
                            classie.remove( body, 'drag-active' );
                        };
                        if( !wasDropped ) {
                            afterDropFn();
                        }
                        else {
                            // after some time hide drop area and remove class 'drag-active' from body
                            clearTimeout( dropAreaTimeout );
                            dropAreaTimeout = setTimeout( afterDropFn, 400 );
                        }
                    }
                } );
            } );
        })();
// body end